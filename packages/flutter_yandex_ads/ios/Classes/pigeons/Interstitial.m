// Autogenerated from Pigeon (v4.1.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import "Interstitial.h"
#import <Flutter/Flutter.h>

#if !__has_feature(objc_arc)
#error File requires ARC to be enabled.
#endif

static NSDictionary<NSString *, id> *wrapResult(id result, FlutterError *error) {
  NSDictionary *errorDict = (NSDictionary *)[NSNull null];
  if (error) {
    errorDict = @{
        @"code": (error.code ?: [NSNull null]),
        @"message": (error.message ?: [NSNull null]),
        @"details": (error.details ?: [NSNull null]),
        };
  }
  return @{
      @"result": (result ?: [NSNull null]),
      @"error": errorDict,
      };
}
static id GetNullableObject(NSDictionary* dict, id key) {
  id result = dict[key];
  return (result == [NSNull null]) ? nil : result;
}
static id GetNullableObjectAtIndex(NSArray* array, NSInteger key) {
  id result = array[key];
  return (result == [NSNull null]) ? nil : result;
}


@interface InterstitialError ()
+ (InterstitialError *)fromMap:(NSDictionary *)dict;
+ (nullable InterstitialError *)nullableFromMap:(NSDictionary *)dict;
- (NSDictionary *)toMap;
@end
@interface InterstitialImpression ()
+ (InterstitialImpression *)fromMap:(NSDictionary *)dict;
+ (nullable InterstitialImpression *)nullableFromMap:(NSDictionary *)dict;
- (NSDictionary *)toMap;
@end

@implementation InterstitialError
+ (instancetype)makeWithCode:(NSNumber *)code
    description:(NSString *)description {
  InterstitialError* pigeonResult = [[InterstitialError alloc] init];
  pigeonResult.code = code;
  pigeonResult.description = description;
  return pigeonResult;
}
+ (InterstitialError *)fromMap:(NSDictionary *)dict {
  InterstitialError *pigeonResult = [[InterstitialError alloc] init];
  pigeonResult.code = GetNullableObject(dict, @"code");
  NSAssert(pigeonResult.code != nil, @"");
  pigeonResult.description = GetNullableObject(dict, @"description");
  NSAssert(pigeonResult.description != nil, @"");
  return pigeonResult;
}
+ (nullable InterstitialError *)nullableFromMap:(NSDictionary *)dict { return (dict) ? [InterstitialError fromMap:dict] : nil; }
- (NSDictionary *)toMap {
  return @{
    @"code" : (self.code ?: [NSNull null]),
    @"description" : (self.description ?: [NSNull null]),
  };
}
@end

@implementation InterstitialImpression
+ (instancetype)makeWithData:(NSString *)data {
  InterstitialImpression* pigeonResult = [[InterstitialImpression alloc] init];
  pigeonResult.data = data;
  return pigeonResult;
}
+ (InterstitialImpression *)fromMap:(NSDictionary *)dict {
  InterstitialImpression *pigeonResult = [[InterstitialImpression alloc] init];
  pigeonResult.data = GetNullableObject(dict, @"data");
  NSAssert(pigeonResult.data != nil, @"");
  return pigeonResult;
}
+ (nullable InterstitialImpression *)nullableFromMap:(NSDictionary *)dict { return (dict) ? [InterstitialImpression fromMap:dict] : nil; }
- (NSDictionary *)toMap {
  return @{
    @"data" : (self.data ?: [NSNull null]),
  };
}
@end

@interface YandexAdsInterstitialCodecReader : FlutterStandardReader
@end
@implementation YandexAdsInterstitialCodecReader
- (nullable id)readValueOfType:(UInt8)type 
{
  switch (type) {
    case 128:     
      return [InterstitialError fromMap:[self readValue]];
    
    case 129:     
      return [InterstitialImpression fromMap:[self readValue]];
    
    default:    
      return [super readValueOfType:type];
    
  }
}
@end

@interface YandexAdsInterstitialCodecWriter : FlutterStandardWriter
@end
@implementation YandexAdsInterstitialCodecWriter
- (void)writeValue:(id)value 
{
  if ([value isKindOfClass:[InterstitialError class]]) {
    [self writeByte:128];
    [self writeValue:[value toMap]];
  } else 
  if ([value isKindOfClass:[InterstitialImpression class]]) {
    [self writeByte:129];
    [self writeValue:[value toMap]];
  } else 
{
    [super writeValue:value];
  }
}
@end

@interface YandexAdsInterstitialCodecReaderWriter : FlutterStandardReaderWriter
@end
@implementation YandexAdsInterstitialCodecReaderWriter
- (FlutterStandardWriter *)writerWithData:(NSMutableData *)data {
  return [[YandexAdsInterstitialCodecWriter alloc] initWithData:data];
}
- (FlutterStandardReader *)readerWithData:(NSData *)data {
  return [[YandexAdsInterstitialCodecReader alloc] initWithData:data];
}
@end

NSObject<FlutterMessageCodec> *YandexAdsInterstitialGetCodec() {
  static dispatch_once_t sPred = 0;
  static FlutterStandardMessageCodec *sSharedObject = nil;
  dispatch_once(&sPred, ^{
    YandexAdsInterstitialCodecReaderWriter *readerWriter = [[YandexAdsInterstitialCodecReaderWriter alloc] init];
    sSharedObject = [FlutterStandardMessageCodec codecWithReaderWriter:readerWriter];
  });
  return sSharedObject;
}


void YandexAdsInterstitialSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<YandexAdsInterstitial> *api) {
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.make"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(makeId:error:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(makeId:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        [api makeId:arg_id error:&error];
        callback(wrapResult(nil, error));
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.load"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(loadId:error:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(loadId:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        [api loadId:arg_id error:&error];
        callback(wrapResult(nil, error));
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.show"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(showId:error:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(showId:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        [api showId:arg_id error:&error];
        callback(wrapResult(nil, error));
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.onAdLoaded"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(onAdLoadedId:completion:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(onAdLoadedId:completion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        [api onAdLoadedId:arg_id completion:^(FlutterError *_Nullable error) {
          callback(wrapResult(nil, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.onAdFailedToLoad"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(onAdFailedToLoadId:completion:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(onAdFailedToLoadId:completion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        [api onAdFailedToLoadId:arg_id completion:^(InterstitialError *_Nullable output, FlutterError *_Nullable error) {
          callback(wrapResult(output, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.onAdShown"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(onAdShownId:completion:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(onAdShownId:completion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        [api onAdShownId:arg_id completion:^(FlutterError *_Nullable error) {
          callback(wrapResult(nil, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.onAdDismissed"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(onAdDismissedId:completion:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(onAdDismissedId:completion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        [api onAdDismissedId:arg_id completion:^(FlutterError *_Nullable error) {
          callback(wrapResult(nil, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.onAdClicked"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(onAdClickedId:completion:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(onAdClickedId:completion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        [api onAdClickedId:arg_id completion:^(FlutterError *_Nullable error) {
          callback(wrapResult(nil, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.onLeftApplication"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(onLeftApplicationId:completion:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(onLeftApplicationId:completion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        [api onLeftApplicationId:arg_id completion:^(FlutterError *_Nullable error) {
          callback(wrapResult(nil, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.onReturnedToApplication"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(onReturnedToApplicationId:completion:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(onReturnedToApplicationId:completion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        [api onReturnedToApplicationId:arg_id completion:^(FlutterError *_Nullable error) {
          callback(wrapResult(nil, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.YandexAdsInterstitial.onImpression"
        binaryMessenger:binaryMessenger
        codec:YandexAdsInterstitialGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(onImpressionId:completion:)], @"YandexAdsInterstitial api (%@) doesn't respond to @selector(onImpressionId:completion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_id = GetNullableObjectAtIndex(args, 0);
        [api onImpressionId:arg_id completion:^(InterstitialImpression *_Nullable output, FlutterError *_Nullable error) {
          callback(wrapResult(output, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
}
